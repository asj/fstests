#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2008 Silicon Graphics, Inc.  All Rights Reserved.
#
# FS QA Test No. 217
#
# large log size mkfs test - ensure the log size scaling works
#
. ./common/preamble
_begin_fstest log metadata auto

# Import common functions.
. ./common/filter

_cleanup()
{
	[ -n "$loop_dev" ] && _destroy_loop_device $loop_dev
	cd /
	rm -f $tmp.*
}

_require_scratch
_scratch_mkfs_xfs >/dev/null 2>&1
_scratch_mount
# 16T mkfs requires a bit over 2G free
_require_fs_space $SCRATCH_MNT 2202000

_require_loop
LOOP_IMG=$SCRATCH_MNT/test_fs
LOOP_MNT=$SCRATCH_MNT/test_fs_dir

_do_mkfs()
{
	for i in $*; do
		echo -n "fssize=${i}g "
		$MKFS_XFS_PROG -f -b size=4096 -l version=2 \
			-d size=${i}g $loop_dev |grep log
		_mount $loop_dev $LOOP_MNT
		echo "test write" > $LOOP_MNT/test
		_unmount $LOOP_MNT > /dev/null 2>&1

		# punch out the previous blocks so that we keep the amount of
		# disk space the test requires down to a minimum.
		$XFS_IO_PROG -f -c "unresvsp 0 16383g" $LOOP_IMG
	done
}
# make large holey file
$XFS_IO_PROG -f -c "truncate 16383g" $LOOP_IMG

#make loopback mount dir
mkdir $LOOP_MNT

# test if large logs are supported
$MKFS_XFS_PROG -f -l size=256m -d name=$LOOP_IMG,size=10g > /dev/null 2>&1
if [ $? -ne 0 ]; then
	_notrun "large log sizes not supported by mkfs"
fi

loop_dev=$(_create_loop_device $LOOP_IMG)

#
# walk over "new" sizes supported by recent xfsprogs.
# Note that the last test is for 16TB-1GB as 32bit platforms only support
# device slightly smaller than 16TB.
#
_do_mkfs 512 1024 2048 4096 8192 16383

_destroy_loop_device $loop_dev
unset loop_dev
status=0
exit
